name: CI

on: [push]

env:
  bds_version: 1.14.60.5
  vcpkgResponseFile: '${{ github.workspace }}/vcpkgResponseFile.txt'

jobs:
  build:
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Restore from cache and run vcpkg
      uses: lukka/run-vcpkg@v3
      with:
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgArguments: '@${{ env.vcpkgResponseFile }}'
        appendedCacheKey: ${{ hashFiles(env.vcpkgResponseFile) }}

#     - name: Download BDS
#       if: steps.libcache.outputs.cache-hit != 'true'
#       run: |
#         curl -L -o D:/bds.zip https://minecraft.azureedge.net/bin-win/bedrock-server-${{ env.bds_version }}.zip
#         mkdir BDS
#         cd BDS
#         unzip D:/bds.zip
#       shell: bash

    - name: Build BedrockPy
      uses: lukka/run-cmake@v2
      with:
        cmakeListsOrSettingsJson: CMakeSettingsJson
    
    - name: Install & Packaging
      run: |
        cd /d/a/_temp/RelWithDebInfo
        "/c/Program Files/CMake/bin/cpack" -G TZST .
        "/c/Program Files/CMake/bin/cpack" -G STGZ .
        "/c/Program Files/CMake/bin/cpack" -G ZIP .
        "/c/Program Files/CMake/bin/cpack" -G 7Z .
        ninja install
      shell: bash

    - name: Create a new GitHub release if a new tag is pushed
      uses: softprops/action-gh-release@v1
      with:
        name: v${{ env.GITHUB_TAG_NAME }}
        prerelease: false
        draft: true
        files: |
          pack/BedrockPy-*
        body: (empty)
      if: startsWith(github.ref, 'refs/tags/')
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

#    - name: Upload artifact
#      uses: actions/upload-artifact@v1.0.0
#      with:
#        name: dist
#        path: C:/Program Files (x86)/ElementZero/

    - name: Upload vcpkg installed
      uses: actions/upload-artifact@v1.0.0
      with:
        name: vcpkg
        path: vcpkg/installed/${{ env.RUNVCPKG_VCPKG_TRIPLET_OUT }}
